export JSTESTDRIVER_HOME=~/bin/java

export HISTIGNORE="&:[ ]*:exit"

export PYTHONPATH=/usr/local/lib/python2.6/site-packages/

ssh-add ~/.ssh/id_rsa >/dev/null 2>&1



# Alias FT Labs servers
alias web01='ssh George.Crawford@dev01-web01-uk1.ak.ft.com'
alias proc01='ssh George.Crawford@dev01-processing01-uk1.ak.ft.com'


# Alias Economist
alias econ='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/econhtml5; /bin/bash --login;"'
alias econd='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/econhtml5-dev; /bin/bash --login;"'
alias econt='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/econhtml5-trunk; /bin/bash --login;"'
alias econc='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/econhtml5-chrome-trunk; /bin/bash --login;"'
alias econm='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/econhtml5-monitoring; /bin/bash --login;"'

# Alias FT web app
alias ftdev='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/ftmob-app-dev; /bin/bash --login;"'
alias fttest='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/ftmob-app-test; /bin/bash --login;"'
alias fttrunk='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/ftmob-app-trunk; /bin/bash --login;"'
alias ftdesign='ssh George.Crawford@shell.ak.ft.com -t "cd ~/sandboxes/ftmob-design-v2; /bin/bash --login;"'

# Alias UAT
alias uat='ssh George.Crawford@shell.ak.ft.com -t "cd /home/uat/sandboxes; /bin/bash --login;"'


export PATH=${PATH}:/usr/local/lib/node_modules
##
# Your previous /Users/george/.bash_profile file was backed up as /Users/george/.bash_profile.macports-saved_2012-10-17_at_11:52:00
##

# MacPorts Installer addition on 2012-10-17_at_11:52:00: adding an appropriate PATH variable for use with MacPorts.
export PATH=/usr/local/bin:/opt/local/bin:/opt/local/sbin:~/bin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.



# Remote Mount (sshfs)
# creates mount folder and mounts the remote filesystem
rmount() {
	local host folder mname
	host="${1%%:*}:"
	[[ ${1%:} == ${host%%:*} ]] && folder='' || folder=${1##*:}
	if [[ $2 ]]; then
		mname=$2
	else
		mname=${folder##*/}
		[[ "$mname" == "" ]] && mname=${host%%:*}
	fi
	if [[ $(grep -i "host ${host%%:*}" ~/.ssh/config) != '' ]]; then
		mkdir -p ~/mounts/$mname > /dev/null
		sshfs $host$folder ~/mounts/$mname -oauto_cache,reconnect,defer_permissions,follow_symlinks,volname=$mname,noappledouble,cache_stat_timeout=10,cache_dir_timeout=10,cache_link_timeout=10 && echo "mounted ~/mounts/$mname"
	else
		echo "No entry found for ${host%%:*}"
		return 1
	fi
}

# Remote Umount, unmounts and deletes local folder (experimental, watch your step)
rumount() {
	if [[ $1 == "-a" ]]; then
		ls -1 ~/mounts/|while read dir
		do
			[[ $(mount | grep "mounts/$dir") ]] && umount ~/mounts/$dir
			[[ $(ls ~/mounts/$dir) ]] || rm -rf ~/mounts/$dir && echo "unmounted ~/mounts/$dir"
		done
	else
		[[ $(mount | grep "mounts/$1") ]] && umount ~/mounts/$1
		[[ $(ls ~/mounts/$1) ]] || rm -rf ~/mounts/$1 && echo "unmounted ~/mounts/$1"
	fi
}

devC() {

	if [[ $(grep -m1 -o "10.119" /etc/resolv.conf 2>/dev/null) == '10.119' ]]; then
		echo "*** INSIDE A DEV ENVIRONMENT ***"
	else
		echo "*** NOT IN A DEV ENVIRONMENT ***"
		echo "*** CONNECTING TO VPN ***"
		# /opt/cisco/anyconnect/bin/vpn connect anyconnect.labs.ft.com;
		/opt/cisco/anyconnect/bin/vpn connect https://ftiww-vc.ft.com;
		sleep 3;

		if [[ $(/opt/cisco/anyconnect/bin/vpn status | grep "Disconnected" -o -m 1 2>/dev/null) == 'Disconnected' ]]; then
			echo "*** VPN CONNECTION FAILED ***"
			return 1
		fi
	fi

	# Set Charles flags like this:
	# 	curl http://control.charles/tools/map-remote/enable -x 127.0.0.1:8888


	echo ""
	echo "*** CHECKING MOUNTED DISK ***"
	echo ""
	if [ -d ~/mounts/dev01/sandboxes ]; then
		echo "*** DEV01 ALREADY MOUNTED ***"
	else
		echo "*** MOUNTING DEV01 ***"
		rmount dev01;
		sleep 3;

		if [ -d ~/mounts/dev01/sandboxes ]; then
			echo "*** DEV01 SUCCESSFULLY MOUNTED ***"
			echo ""
		else
			echo "*** DEV01 NOT SUCCESSFULLY MOUNTED ***"
			echo ""
		fi
	fi
	echo ""

	killall autoping 2>/dev/null
	open /Applications/autoping.app/
}

devD() {

	echo ""

	if [ -d ~/mounts/dev01/sandboxes ]; then
		echo "*** DEV01 IS MOUNTED ***"
	else
		echo "*** DEV01 IS NOT MOUNTED ***"
	fi
	rumount dev01;

	echo ""

	echo "*** DISCONNECTING FROM VPN ***"
	/opt/cisco/anyconnect/bin/vpn disconnect;

	echo ""

	killall autoping 2>/dev/null
	open /Applications/autoping.app/

}

devS() {

	echo ""
	if [[ $(grep -m1 -o "10.119" /etc/resolv.conf 2>/dev/null) == '10.119' ]]; then
		echo "*** INSIDE A DEV ENVIRONMENT ***"
	else
		echo "*** NOT IN A DEV ENVIRONMENT ***"
	fi

	/opt/cisco/anyconnect/bin/vpn status;

	echo ""

	if [ -d ~/mounts/dev01/sandboxes ]; then
		echo "*** DEV01 IS MOUNTED ***"
	else
		echo "*** DEV01 IS NOT MOUNTED ***"
	fi

	echo ""

	killall autoping 2>/dev/null
	open /Applications/autoping.app/
}